El archivo Assembler.sh convierte los archivos .asm en archivos .hack, toma las instrucciones escritas en 
el archivo .asm y las convierte a binario para despues escribir ese resultado en un archivo .hack.

El ensamblador se puede iniciar en modo interactivo, donde escribo las instrucciones en el mismo programa,
o también se puede introducir un archivo especifico. Para el archivo especifico necesitamos proporcianar la ruta 
del mismo.

luego de que las instrucciones se pasen a binario en el archivo .hack las ponemos en el CPU emulator

Nuestro ensamblador en python tiene la misma función, usamos 1 diccionario y dos tablas

SYMBOL_TABLE: Es un diccionario que contiene símbolos predefinidos del lenguaje ensamblador Hack,
como "SP", "LCL", "THIS", "THAT", y las direcciones de los registros R0, R1, etc. 
También contiene las direcciones para la pantalla (SCREEN) y el teclado (KBD).

DEST_TABLE: Traduce las ubicaciones de destino (como D, M, A, MD, etc.)
 a un código binario de 3 bits.
 Esta parte indica dónde se almacenará el resultado de la operación.

JUMP_TABLE: Traduce las condiciones de salto (como JMP, JEQ, JNE, etc.) 
a un código binario de 3 bits. 
Esta parte indica si el programa debe saltar a otra instrucción basándose
 en la condición indicada.

Para la traducción se toma la instrucción del tipo @valor (instrucción tipo a), se extrae el valor luego del @
se pasa a un bianrio de 16 bits que luego se muestra como cadena.

de la misma manera se toaman las instrucciones que no tienen @,(instrucción tipo c) como las de igualación 
o las que tienen ;.

En el caso de Add.asm 

La instrucción @2 se traduce como 0000000000000010 (A-instruction).
La instrucción D=A se traduce como 1110110000010000 (C-instruction).
La instrucción @3 se traduce como 0000000000000011 (A-instruction).
La instrucción D=D+A se traduce como 1110000010010000 (C-instruction).
La instrucción @0 se traduce como 0000000000000000 (A-instruction).
La instrucción M=D se traduce como 1110001100001000 (C-instruction).


